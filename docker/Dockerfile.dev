ARG AAXtoMP3_VERSION=1.3
ARG TONE_VERSION=0.1.2
ARG NODE_VERSION=16.17.1-r0
ARG USR_LOCAL=/export

######### Basic builder base #######################################################################
FROM alpine:3.16 as build

ARG PYTHON_VERSION
ARG AAXtoMP3_VERSION
ARG TONE_VERSION
ARG USR_LOCAL

ARG TARGETPLATFORM
ARG TARGETARCH
ARG BUILDPLATFORM

RUN echo "---- CREATE EXPORT DIRS ----" \
  && mkdir -p ${USR_LOCAL}/bin
RUN echo "---- INSTALL BUILD DEPENDENCIES ----" \
  && echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \
  && apk add --no-cache --update --upgrade --virtual=build-dependencies \
    autoconf \
    automake \
    boost-dev \
    build-base \
    gcc \
    git \
    tar \
    fdk-aac-dev \
    wget
RUN echo "---- INSTALL TONE ----" \
  && case "${TARGETARCH}" in \
    "amd64")  TONE_LINK=https://github.com/sandreas/tone/releases/download/v${TONE_VERSION}/tone-${TONE_VERSION}-linux-musl-x64.tar.gz  ;; \
    "arm64")  TONE_LINK=https://github.com/sandreas/tone/releases/download/v${TONE_VERSION}/tone-${TONE_VERSION}-linux-musl-arm64.tar.gz  ;; \
    *) exit 1 ;; \
  esac; \
  wget $TONE_LINK \
  && tar xzf tone-*.tar.gz \
  && mv tone*/tone ${USR_LOCAL}/bin/ \
  && rm -rf ./tone*
RUN echo "---- COMPILE SANDREAS MP4V2 (for sort-title, sort-album and sort-author) ----" \
  && cd /tmp/ \
  && wget https://github.com/sandreas/mp4v2/archive/refs/heads/master.zip \
  && unzip master.zip \
  && cd mp4v2-master \
  && ./configure --prefix=${USR_LOCAL} && \
  make -j4 && \
  make install && make distclean
RUN echo "---- INSTALL AAXtoMP3 ----" \
  && wget https://github.com/KrumpetPirate/AAXtoMP3/releases/download/v${AAXtoMP3_VERSION}/AAXtoMP3-v${AAXtoMP3_VERSION}.tar.gz -O - | tar -xz \
  && cp -vn ./AAXtoMP3/AAXtoMP3 ${USR_LOCAL}/bin/AAXtoMP3
RUN echo "---- REMOVE BUILD DEPENDENCIES (to keep image small) ----" \
   && apk del --purge build-dependencies && rm -rf /tmp/* \
   && rm -rf /root/.cache /tmp/*


######### Development base #########################################################################
FROM python:3.11.0-alpine3.16 as development

# Renew args from above
ARG AAXtoMP3_VERSION
ARG TONE_VERSION
ARG NODE_VERSION
ARG USR_LOCAL

ENV AAXtoMP3_VERSION=${AAXtoMP3_VERSION}
ENV TONE_VERSION=${TONE_VERSION}

# Copy artifacts from the previous stage ()
COPY --from=build "${USR_LOCAL}/" "/usr/local/"

RUN echo "---- INSTALL DEPENDENCIES ----" \
  && echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories \
  && apk add bash x264 x265 mediainfo grep findutils ffmpeg jq nodejs=${NODE_VERSION} npm
RUN echo "---- INSTALL AUDIBLE-CLI ----" \
  && pip3 install \
    audible-cli \
    markdownify \
    natsort

# # Add auto-start services
# COPY services.d /etc/services.d

# # set version for s6 overlay
# ARG S6_OVERLAY_VERSION="3.1.2.1"
  # && case "${TARGETARCH}" in \
  #   "amd64")  S6_OVERLAY_ARCH=x86_64  ;; \
  #   "arm64")  S6_OVERLAY_ARCH=aarch64  ;; \
  #   *) exit 1 ;; \
  # esac; && \
# echo "---- INSTALL S6 ----" \
#   && wget https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-noarch.tar.xz /tmp \
#   && tar -C /root-out -Jxpf /tmp/s6-overlay-noarch.tar.xz \
#   && wget https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${S6_OVERLAY_ARCH}.tar.xz /tmp \
#   && tar -C /root-out -Jxpf /tmp/s6-overlay-${S6_OVERLAY_ARCH}.tar.xz \
#   && wget https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-symlinks-noarch.tar.xz /tmp \
#   && tar -C /root-out -Jxpf /tmp/s6-overlay-symlinks-noarch.tar.xz \
#   && wget https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-symlinks-arch.tar.xz /tmp \
#   && tar -C /root-out -Jxpf /tmp/s6-overlay-symlinks-arch.tar.xz \
# CMD ["/ui/"]
# ENTRYPOINT ["/init"]